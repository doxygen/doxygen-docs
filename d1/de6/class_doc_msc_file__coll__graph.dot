digraph "DocMscFile"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="DocMscFile",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Node representing a msc file."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="DocDiagramFileBase",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d3/d7c/class_doc_diagram_file_base.html",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="DocCompoundNode",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$da/dfc/class_doc_compound_node.html",tooltip="Base class for nodes with children."];
  Node4 -> Node3 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="DocNode",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d0e/class_doc_node.html",tooltip="Abstract node interface with type information."];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_parser",fontcolor="grey" ];
  Node5 [id="Node000005",label="DocParser",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$da/d02/class_doc_parser.html",tooltip=" "];
  Node6 -> Node5 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="IDocParser",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$de/dad/class_i_doc_parser.html",tooltip="opaque parser interface"];
  Node7 -> Node5 [id="edge6_Node000005_Node000007",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" context",fontcolor="grey" ];
  Node7 [id="Node000007",label="DocParserContext",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d8/d7d/struct_doc_parser_context.html",tooltip="Parser's context to store all global variables."];
  Node8 -> Node7 [id="edge7_Node000007_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" scope",fontcolor="grey" ];
  Node8 [id="Node000008",label="Definition",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/dcc/class_definition.html",tooltip="The common base class of all entity definitions found in the sources."];
  Node9 -> Node7 [id="edge8_Node000007_Node000009",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" context\nexampleName\nfileName\nincludeFileName\nincludeFileText\nprefix\nrelPath\nsearchUrl",fontcolor="grey" ];
  Node9 [id="Node000009",label="QCString",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d45/class_q_c_string.html",tooltip="This is an alternative implementation of QCString."];
  Node10 -> Node7 [id="edge9_Node000007_Node000010",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" initialStyleStack\nstyleStack",fontcolor="grey" ];
  Node10 [id="Node000010",label="IterableStack\< const\l DocNodeVariant * \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d82/class_iterable_stack.html",tooltip=" "];
  Node11 -> Node10 [id="edge10_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="std::stack\< const DocNode\lVariant *, std::deque\<const\l DocNodeVariant *\> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node10 [id="edge11_Node000010_Node000012",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< const DocNodeVariant * \>",fontcolor="grey" ];
  Node12 [id="Node000012",label="IterableStack\< T, Container \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/d82/class_iterable_stack.html",tooltip=" "];
  Node13 -> Node12 [id="edge12_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="std::stack\< T, std\l::deque\< T \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node7 [id="edge13_Node000007_Node000014",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" memberDef",fontcolor="grey" ];
  Node14 [id="Node000014",label="MemberDef",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$da/d09/class_member_def.html",tooltip="A model of a class/file/namespace member symbol."];
  Node8 -> Node14 [id="edge14_Node000014_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node7 [id="edge15_Node000007_Node000015",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" token",fontcolor="grey" ];
  Node15 [id="Node000015",label="TokenInfo",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d6/df4/struct_token_info.html",tooltip="Data associated with a token used by the comment block parser."];
  Node9 -> Node15 [id="edge16_Node000015_Node000009",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" attribsStr\nchars\nname\nsectionId\nsimpleSectName\nsimpleSectText\ntext\nverb",fontcolor="grey" ];
  Node16 -> Node15 [id="edge17_Node000015_Node000016",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" attribs",fontcolor="grey" ];
  Node16 [id="Node000016",label="HtmlAttribList",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$db/d4d/class_html_attrib_list.html",tooltip="Class representing a list of HTML attributes."];
  Node17 -> Node16 [id="edge18_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="std::vector\< HtmlAttrib \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node5 [id="edge19_Node000005_Node000018",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" tokenizer",fontcolor="grey" ];
  Node18 [id="Node000018",label="DocTokenizer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/d7f/class_doc_tokenizer.html",tooltip=" "];
  Node19 -> Node3 [id="edge20_Node000003_Node000019",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" m_children",fontcolor="grey" ];
  Node19 [id="Node000019",label="DocNodeList",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d9/dd3/struct_doc_node_list.html",tooltip=" "];
  Node20 -> Node19 [id="edge21_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="GrowVector\< DocNodeVariant \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d08/class_grow_vector.html",tooltip=" "];
  Node21 -> Node20 [id="edge22_Node000020_Node000021",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< DocNodeVariant \>",fontcolor="grey" ];
  Node21 [id="Node000021",label="GrowVector\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d08/class_grow_vector.html",tooltip="std::vector like container optimized for pushing elements to the back."];
}
